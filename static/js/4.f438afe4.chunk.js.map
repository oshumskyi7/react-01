{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","name","DialogItem","path","id","className","s","dialog","active","Message","message","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElement","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"6NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,gBAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,kICMxNC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAhBQ,SAACR,GAEpB,OACI,uBAAMU,SAAUV,EAAMW,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBC,KAAK,qBAE1C,8BACI,kD,0BCDDC,EAZI,SAACnB,GAChB,IAAIoB,EAAO,YAAcpB,EAAMqB,GAC/B,OAEI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASxB,GAAImB,EAAb,SAAoBpB,EAAMkB,UCCvBQ,EAPC,SAAC1B,GAEb,OACI,qBAAKsB,UAAWC,IAAEC,OAAlB,SAA2BxB,EAAM2B,WC+B1BC,EA5BC,SAAC5B,GAEb,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYf,KAAMe,EAAEf,KAAiBG,GAAIY,EAAEZ,IAAZY,EAAEZ,OAC1Ea,EAAkBzC,EAAM0C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAST,QAASS,EAAET,SAAcS,EAAEf,OAC7D5B,EAAM4C,eAM3B,OAAKrC,EAAMN,OAGP,sBAAK4B,UAAWC,IAAEQ,QAAlB,UACI,qBAAKT,UAAWC,IAAEe,aAAlB,SACKR,IAEL,qBAAKR,UAAWC,IAAEY,SAAlB,SACI,8BAAMD,MAGV,cAAC,EAAD,CAAgBxB,SAfJ,SAAC6B,GACjBvC,EAAMwC,YAAYD,EAAOF,sBAGH,cAAC,IAAD,CAAUpC,GAAI,aCA7BwC,sBACXtC,aAfkB,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIF,SAACa,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAOpCzC,IAFW6C,CAGbb","file":"static/js/4.f438afe4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login/\"} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2aXas\",\"dialogsItem\":\"Dialogs_dialogsItem__3Nr2t\",\"messages\":\"Dialogs_messages__263_9\",\"message\":\"Dialogs_message__3oJKN\",\"dialogsItems\":\"Dialogs_dialogsItems__368B0\",\"active\":\"Dialogs_active__2wad0\"};","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                validate={[required, maxLength50]}\r\n                placeholder=\"Enter your message\" name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={\"/login/\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}