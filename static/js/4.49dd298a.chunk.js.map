{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,kICG1NC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,mCCYRE,EAZI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAEI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCCvBC,EAPC,SAACT,GAEb,OACI,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,iCCAnCC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAhBQ,SAACb,GAEpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBd,KAAK,qBAE1C,8BACI,kDCkBDe,EA5BC,SAACvB,GAEb,IAAIJ,EAAQI,EAAMwB,YAEdC,EAAkB7B,EAAM8B,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBN,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC3E2B,EAAmBjC,EAAMkC,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE7B,OAC/DN,EAAMoC,eAM3B,OAAKhC,EAAMH,OAGP,sBAAKM,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAE6B,aAAlB,SACMR,IAEN,qBAAKtB,UAAWC,IAAE0B,SAAlB,SACI,8BAAOD,MAGX,cAAC,EAAD,CAAgBd,SAfJ,SAACmB,GACjBlC,EAAMmC,YAAYD,EAAOF,sBAGH,cAAC,IAAD,CAAUzB,GAAI,YCE7B6B,sBACXC,aAfkB,SAACzC,GACnB,MAAO,CACH4B,YAAa5B,EAAM4B,gBAIF,SAACc,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,EAASC,YAAmBP,ULTR,SAACQ,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAK1C,MAAMH,OAET,cAAC2C,EAAD,eAAeE,KAAK1C,QAFI,cAAC,IAAD,CAAUO,GAAG,eAJT,GAEXoC,IAAMH,WAUtC,OAFqCH,YAAQ1C,EAAR0C,CAAoCI,KKI9DL,CAGbb","file":"static/js/4.49dd298a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2aXas\",\"dialogsItem\":\"Dialogs_dialogsItem__3Nr2t\",\"messages\":\"Dialogs_messages__263_9\",\"message\":\"Dialogs_message__3oJKN\",\"dialogsItems\":\"Dialogs_dialogsItems__368B0\",\"active\":\"Dialogs_active__2wad0\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                validate={[required, maxLength50]}\r\n                placeholder=\"Enter your message\" name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}